function [adjET] = move_clusters(data, clusters, aoi_width, aoi_height)
    
    adjET = zeros(size(data, 1), 6);
    aoi_info = get_aoi_info(aoi_width, aoi_height);
    
    for i=1:4 %for each AOI          
       % Find the points within the new cluster 
       if clusters(i, 1) > 0
           ind_withinCluster = find(...
               data(:, 3) > clusters(i, 5) & ...
               data(:, 3) < clusters(i, 6) & ...
               data(:, 4) > clusters(i, 7) & ...
               data(:, 4) < clusters(i, 8) ...
           );
       
           x_bias = (aoi_info(i, 1)-clusters(i, 3));
           y_bias = (aoi_info(i, 2)-clusters(i, 4));
           
           % Adjust the x (col 1) and y position (col 2) such that cluster 
           % center is in middle of AOI
           % col 1: run
           % col 2: task index
           % col 3: x
           % col 4: y
           % col 5: t task
           % col 6: aoi
           adjET(ind_withinCluster, 1:6) = ...
               [...
                   data(ind_withinCluster, 1:2), ...
                   data(ind_withinCluster, 3) + x_bias, ...
                   data(ind_withinCluster, 4) + y_bias, ...
                   data(ind_withinCluster, 5), ...
                   repmat(i, length(ind_withinCluster),1)...
               ];
         
       else
           % Use the conventional aoi
           ind_withinCluster = find(...
               data(:, 3) > aoi_info(i, 3) & ...
               data(:, 3) < aoi_info(i, 4) & ...
               data(:, 4) > aoi_info(i, 5) & ...
               data(:, 4) < aoi_info(i, 6) ...
           );  
       
           adjET(ind_withinCluster, 1:6) = [...
               data(ind_withinCluster, 1:2), ...
               data(ind_withinCluster, 3), ...
               data(ind_withinCluster, 4), ...
               data(ind_withinCluster, 5), ...
               repmat(i, length(ind_withinCluster),1)...
           ];
       end
    end 
end