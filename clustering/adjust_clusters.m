function [adjET] = adjust_clusters(data, n_clusters, aoi_width, aoi_height)

    run_name = int2str(unique(data.run_id));
    mkdir(fullfile('plots', run_name));
   
    % data
    % col 1: 'run_id', 
    % col 2: 'withinTaskIndex'
    % col 3: 'x'
    % col 4: 'y'
    % col 5: 't_task'

    data = table2array(data);
    
    % Create Plot
    scatter_plot(data(:, 3), data(:, 4), ...
        fullfile('plots', run_name, 'uncorrected.png'));

    % col 3: x
    % col 4: y
    grandmean=mean(data(:, (3:4))); %Find center of all eye data points

    % Assing clusters
    clusters = clusterdata(...
        data(:, 3:4), ...
        'linkage','centroid', ...
        'savememory','on', ...
        'maxclust', n_clusters);
    
    % col: 8
    data=[data clusters];   

    % Create Plo
    scatter_plot_clusters(data(:, 3), data(:, 4), data(:, 6), ...
        grandmean, ...
        fullfile('plots', run_name, 'clusters.png'));

    
    % col 1: cluster number
    % col 2: number of data points in each cluster (accumarray),
    % col 3: mean cluster x position
    % col 4: mean cluster y position
    % col 5: left border
    % col 6: right border
    % col 7: top border
    % col 8: bottom borter
    cluster_aoi_info = get_cluster_aoi_info(...
        data, clusters, n_clusters, aoi_width, aoi_height);

    % col 1-8: see cluster_aoi_info
    % col 9: corner (TL, TR, BL, BR)
    largest_clusters = find_largest_clusters(...
        cluster_aoi_info, grandmean, 0.025);
    
    data_largest_clusters = data(...
        (...
            ismember(data(:, 6), largest_clusters(:, 1)) & ...
            (data(:, 6) > 0)...
        ), :);
    scatter_plot_clusters(...
        data_largest_clusters(:, 3), ...
        data_largest_clusters(:, 4), ...
        data_largest_clusters(:, 6), ...
        grandmean, ...
        fullfile('plots', run_name, 'corner_clusters.png'));

    %{
    % Separate clustering for first and second half of the experiment
    sub1 = data(:,1)==subj(i) & data(:,2)<41;
    [dataWithClusters1, aoiInfo1, clusterInfo1, matchedClusterInd1] = getClusters(data(sub1, :), ...
        grandmean, aoiSizePercentage);
    
    sub2 = data(:,1)==subj(i) & data(:,2)>40;
    [dataWithClusters2, aoiInfo2, clusterInfo2, matchedClusterInd2] = getClusters(data(sub2, :), ...
        grandmean, aoiSizePercentage);
    
    % Clusters differ if >40 pixels deviation and > 20 gaze points 
    clusters1And2differ  = ...
        sum(sum(abs(clusterInfo1(matchedClusterInd1,3:4)-clusterInfo2(matchedClusterInd2,3:4))>0.04)) && ...
        sum(clusterInfo1(matchedClusterInd2, 1)>20) && ...
        sum(clusterInfo2(matchedClusterInd2, 2)>20);
    
   if clusters1And2differ
        'Need some new code here!'
   end 
   %}
    
    % largest cluster
    % col 1: cluster number
    % col 2: number of data points in each cluster (accumarray),
    % col 3: mean cluster x position
    % col 4: mean cluster y position
    % col 5: left border
    % col 6: right border
    % col 7: top border
    % col 8: bottom border
    
    adjET = zeros(size(data, 1), 6);
    aoi_info = get_aoi_info(aoi_width, aoi_height);
    
    for i=1:4 %for each AOI          
       % Find the points within the new cluster 
       if largest_clusters(i, 1) > 0
           ind_withinCluster = find(...
               data(:, 3) > largest_clusters(i, 5) & ...
               data(:, 3) < largest_clusters(i, 6) & ...
               data(:, 4) > largest_clusters(i, 7) & ...
               data(:, 4) < largest_clusters(i, 8) ...
           );
       
           x_bias = (aoi_info(i, 1)-largest_clusters(i, 3));
           y_bias = (aoi_info(i, 2)-largest_clusters(i, 4));
           
           % Adjust the x (col 1) and y position (col 2) such that cluster 
           % center is in middle of AOI
           % col 1: run
           % col 2: task index
           % col 3: x
           % col 4: y
           % col 5: t task
           % col 6: aoi
           adjET(ind_withinCluster, 1:6) = ...
               [...
                   data(ind_withinCluster, 1:2), ...
                   data(ind_withinCluster, 3) + x_bias, ...
                   data(ind_withinCluster, 4) + y_bias, ...
                   data(ind_withinCluster, 5), ...
                   repmat(i, length(ind_withinCluster),1)...
               ];
         
       else
           % Use the conventional aoi
           ind_withinCluster = find(...
               data(:, 3) > aoi_info(i, 3) & ...
               data(:, 3) < aoi_info(i, 4) & ...
               data(:, 4) > aoi_info(i, 5) & ...
               data(:, 4) < aoi_info(i, 6) ...
           );  
       
           adjET(ind_withinCluster, 1:6) = [...
               data(ind_withinCluster, 1:2), ...
               data(ind_withinCluster, 3), ...
               data(ind_withinCluster, 4), ...
               data(ind_withinCluster, 5), ...
               repmat(i, length(ind_withinCluster),1)...
           ];
       end
    end  
    
    scatter_plot_clusters(...
        adjET(:, 3), ...
        adjET(:, 4), ...
        adjET(:, 6), ...
        [0.5, 0.5], ...
        fullfile('plots', run_name, 'corrected.png'));
     
end
