function [adjET, require_separate_clustering] = adjust_clusters(...
    data, n_clusters, aoi_width, aoi_height)

    % data
    % col 1: 'run_id', 
    % col 2: 'withinTaskIndex'
    % col 3: 'x'
    % col 4: 'y'
    % col 5: 't_task'

    data = table2array(data);

    % Test Separate clustering for first and second half of the experiment        
    
    % largest cluster
    % col 1: cluster number
    % col 2: number of data points in each cluster (accumarray),
    % col 3: mean cluster x position
    % col 4: mean cluster y position
    % col 5: left border
    % col 6: right border
    % col 7: top border
    % col 8: bottom border
    largest_clusters_sub_1 = fit_clusters(...
        data(data(:, 3)<41, :), n_clusters, aoi_width, aoi_height, ...
        0.025, false);
     
    largest_clusters_sub_2 = fit_clusters(...
       data(data(:, 3)>40, :), n_clusters, aoi_width, aoi_height, ...
       0.025, false);
    
    % If clusters deviate by 5% and have more than 50 data points
    clusters_deviate = sum(...
                abs(...
                    largest_clusters_sub_1(:, 3:4) - ...
                    largest_clusters_sub_2(:, 3:4)...
                    )>0.05, ...
                2)>0;
            
    clusters_large_enough = ...
        (largest_clusters_sub_1(:, 2)>50) .* ...
        (largest_clusters_sub_2(:, 2)>50);
    
    require_separate_clustering = sum(...
        clusters_deviate .* clusters_large_enough)>0;  
    
    if require_separate_clustering
        
        strcat('Separate clustering for run: ', int2str(unique(data(:, 1))))

        adjET_1 = move_clusters(...
            data(data(:, 3)<41, :), largest_clusters_sub_1, ...
            aoi_width, aoi_height);
        adjET_2 = move_clusters(...
            data(data(:, 3)>40, :), largest_clusters_sub_2, ...
            aoi_width, aoi_height);
        adjET = [adjET_1; adjET_2];
        
    else
        largest_clusters = fit_clusters(...
            data, n_clusters, aoi_width, aoi_height, ...
            0.025, false);
    
        adjET = move_clusters(...
            data, largest_clusters, aoi_width, aoi_height);
    end
        
    % plot results
    run_name = int2str(unique(data(:, 1)));
    scatter_plot_clusters(...
        adjET(:, 4), ...
        adjET(:, 5), ...
        adjET(:, 7), ...
        [0.5, 0.5], ...
        fullfile('plots', run_name, 'corrected.png'));
     
end
