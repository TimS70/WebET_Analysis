setwd("C:/Users/User/Google Drive/Duke/Academia/HuettelLab/Admin/MasterLab/PowerAnalysis")
#Create a function that checks if packages are installed, if they aren't, they installed and loaded. The function was originally provided at https://gist.github.com/stevenworthington/3178163
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# Required R packages for the case study
packages <- c("simr",
"dplyr")
ipak(packages) #Install or activates required packages
knitr::opts_chunk$set(echo = TRUE) #RMarkdown setting
simrOptions(progress=TRUE) #simr setting
CreateDs <- function(NTrial, NSubj) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 5+round(runif(NSubj)*50, digits=0)
light   <- runif(NSubj/8)
prec <- 0.5 + runif(NSubj/8)*0.5
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
prec_full   <- rep(rep(prec, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(prec=prec_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
ds <- CreateDs(NTrial=27, NSubj=8*30)
View(ds)
ds <- CreateDs(NTrial=27, NSubj=8*30)
View(ds)
CreateDs <- function(NTrial, NSubj) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 5+round(runif(NSubj)*50, digits=0)
light   <- runif(NSubj/8)
prec <- round(0.5 + runif(NSubj/8)*0.5, digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
prec_full   <- rep(rep(prec, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(prec=prec_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
ds <- CreateDs(NTrial=27, NSubj=8*30)
View(ds)
CreateDs <- function(NTrial, NSubj) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 5+round(runif(NSubj)*50, digits=0)
light   <- runif(NSubj/8)
acc <- round(0.5 + runif(NSubj/8)*0.5, digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
acc_full   <- rep(rep(acc, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(prec=prec_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
CreateDs <- function(NTrial, NSubj) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 5+round(runif(NSubj)*50, digits=0)
light   <- runif(NSubj/8)
acc <- round(0.5 + runif(NSubj/8)*0.5, digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
acc_full   <- rep(rep(acc, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(acc=acc_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
ds <- CreateDs(NTrial=27, NSubj=8*30)
View(ds)
CreateDs <- function(NTrial, NSubj) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 5+round(runif(NSubj)*50, digits=0)
light   <- runif(NSubj/8)
offset <- round(0.5 + runif(NSubj/8)*0.5, digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
offset_full <- rep(rep(offset, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(acc=acc_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
CreateDs <- function(NTrial, NSubj) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 5+round(runif(NSubj)*50, digits=0)
light   <- runif(NSubj/8)
offset <- round(0.5 + runif(NSubj/8)*0.5, digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
offset_full <- rep(rep(offset, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(offset=offset_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
ds <- CreateDs(NTrial=27, NSubj=8*30)
View(ds)
CreateDs <- function(NTrial, NSubj, BasicOffset) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 5+round(runif(NSubj)*50, digits=0)
light   <- runif(NSubj/8)
offset <- round(BasicOffset + runif(NSubj/8)*0.5, digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
offset_full <- rep(rep(offset, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(offset=offset_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
CreateDs <- function(NTrial, NSubj, BasicOffset) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 5+round(runif(NSubj)*50, digits=0)
light   <- runif(NSubj/8)
offset <- round(BasicOffset + runif(BasicOffset, 2*BasicOffset, NSubj/8)*0.5, digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
offset_full <- rep(rep(offset, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(offset=offset_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
runif(-0.15, 0.3, 2)
runif(1*0.5)
runif(2)
runif(6, 1, 6)
BasicOffset=0.15
NSubj=8*2
runif((-1*BasicOffset), (2*BasicOffset), (NSubj/8))
runif(0, 0.3, 2)
runif(0.3, 0, 2)
runif(6, 1, 2)
runif((NSubj/8), 0, 2*BasicOffset)
CreateDs <- function(NTrial, NSubj, BasicOffset) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 5+round(runif(NSubj)*50, digits=0)
light   <- runif(NSubj/8)
offset <- round(runif((NSubj/8), 0, 2*BasicOffset), digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
offset_full <- rep(rep(offset, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(offset=offset_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
ds <- CreateDs(NTrial=27, NSubj=8*30, BasicOffset=0.15)
View(ds)
?rnorm
CreateDs <- function(NTrial, NSubj, BasicOffset) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 10+rnorm(NSubj, mean=10, sd=5)
light   <- floor(runif(NSubj/8, 0, 1))
offset <- round(runif((NSubj/8), 0, 2*BasicOffset), digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
offset_full <- rep(rep(offset, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(offset=offset_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
ds <- CreateDs(NTrial=27, NSubj=8*30, BasicOffset=0.15)
View(ds)
CreateDs <- function(NTrial, NSubj, BasicOffset) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 10+rnorm(NSubj, mean=10, sd=5)
light   <- floor(runif(NSubj/8, 0, 1)+0.5)
offset <- round(runif((NSubj/8), 0, 2*BasicOffset), digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
offset_full <- rep(rep(offset, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(offset=offset_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
ds <- CreateDs(NTrial=27, NSubj=8*30, BasicOffset=0.15)
View(ds)
CreateDs <- function(NTrial, NSubj, BasicOffset) {
trial  <- 1:NTrial
subj <- factor(1:NSubj)
fps     <- 10+rnorm(NSubj, mean=10, sd=5)
light   <- floor(runif(NSubj/8, 0, 1)+0.5)
offset <- round(rnorm((NSubj/8), mean=BasicOffset, sd=0.07), digits=2)
group  <- c(0, 1)
trial_full <- rep(trial, NSubj)
subj_full <- rep(rep(subj, each=NTrial))
fps_full   <- rep(rep(fps, each=NTrial))
light_full <- rep(rep(light, each=NTrial), 8)
offset_full <- rep(rep(offset, each=NTrial), 8)
treat1_full <- rep(rep(group, each=NTrial), each=NSubj/2)
treat2_full <- rep(rep(rep(group, each=NTrial), each=NSubj/4), 2)
treat3_full <- rep(rep(group, each=NTrial), NSubj/2)
ds <- data.frame(offset=offset_full, trial=trial_full, treat1=treat1_full, treat2=treat2_full, treat3=treat3_full, fps=fps_full, light=light_full, subj=subj_full)
return(ds)
}
setwd("C:/Users/User/Google Drive/Masterarbeit/Analysis/APrioriPower")
# Package-Function: https://gist.github.com/stevenworthington/3178163
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(c("knitr",
"simr",
"dplyr",
"rsq",
"tictoc",
"tinytex"))
tic("total")
simrOptions("progress"=FALSE) # Do not show progress bar
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) # Show R markdown output as Integers
simrOptions(progress=TRUE) #simr setting
myNSim = 500
myBreaks = 25
kTrial = 3
nsubj = 20
ds <- data.frame(
# For each subject
subj   = rep(factor(1:nsubj), each=2*kTrial),
light  = rep(floor(runif(nsubj, 0, 1)+0.5), each=2*kTrial),
ethnic = rep(floor(runif(nsubj, 0, 2.99)), each=2*kTrial),
glasses = rep(rep(c(0, 1), each=2*kTrial), each=nsubj/2),
visualAid = rep(rep(c(1:4), each=2*kTrial), nsubj/4),
# For each trial
trial  = rep(1:kTrial, 2*nsubj),
fps    = 10+rnorm(2*nsubj*kTrial, mean=4, sd=6.68),
offset = round(rnorm((2*nsubj*kTrial), mean=0.15, sd=0.15),
digits=2),
chin   = rep(c(0, 1), each=kTrial, nsubj)
)
ds$visualAid <- factor(ds$visualAid, levels = c(1, 2, 3, 4),
labels = c("noCorrect", "short", "long", "progressive"))
ds$visualAid <- relevel(ds$visualAid, ref = "noCorrect")
ds$ethnic <- factor(ds$ethnic, levels = c(0, 1, 2),
labels = c("Cauc", "Black", "Asian"))
ds$ethnic <- relevel(ds$ethnic, ref = "Cauc")
ds$fps_c <- scale(ds$fps)
ds$light_c <- scale(ds$light)
defineRS <- function(mychin) {
# Intercept and slopes for intervention, time1, time2,     intervention:time1, intervention:time2
# Effects based on Semmelmann & Weigelt, 2018 - We take the other effects * 3
fixed <- c(0.15,   # Intercept
0.001,  # Trial
mychin,   # chin
0.02, # glasses
0.005, # short
0.005, # long
0.001, # progressive
0.0007, # Black
0.007   # Asian
)
# Random intercepts for participants clustered by class, Variance from above
# https://rstudio-pubs-static.s3.amazonaws.com/484106_6b51212f20164fdd88cd7cce89bdef79.html
rand <- matrix(c(0.05^2, -0.0005, -0.0005, 0.03^2), 2, 2)
# Extract residual sd
res <- (1.218e-12^0.5)
m <- makeLmer(offset ~ trial + chin + glasses + visualAid + ethnic  + (1 + chin |subj),
fixef=fixed, VarCorr=rand, sigma=res, data=ds)
return(m)
}
treat = c(0.02)
output = list(rep(0, length(treat)))
for(i in 1:length(treat)) {
m <- defineRS(mychin=treat[i])
m <- extend(m, along="subj", n=500)
pc <- powerCurve(m, along="subj",
test = fixed("glasses", method="t"),
breaks=seq(200, 300, myBreaks),
nsim=myNSim)
output[[i]] <- list(m, pc)
names(output[[i]]) <- c("Model", "Power Curve")
}
output
toc()
